<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mbyte.easy.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.mbyte.easy.entity.SysRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <collection property="resources"  column="id"   select="selectResourceByRoleId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, available, description, name
  </sql>

  <select id="selectResourceByRoleId" parameterType="java.lang.Long"  resultType="com.mbyte.easy.entity.SysResource">
    SELECT
	sys_resource.id as id,
	sys_resource.available as available,
	sys_resource.`name` as name ,
	sys_resource.permission as permission,
	sys_resource.order_num as order_num,
	sys_resource.type as type,
	sys_resource.url as url,
	sys_resource.parent_id as parent_id
	FROM
	sys_role_resources
	INNER JOIN sys_resource ON sys_role_resources.resources_id = sys_resource.id
	where sys_role_id = #{id}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  
  <select id="selectByRole" parameterType="com.mbyte.easy.entity.SysRole"
                            resultType="com.mbyte.easy.entity.SysRole">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where 1 = 1
     <if test="available != null and available != ''">
        and available = #{available}
    </if>
     <if test="name != null and name != ''">
        and name like "%"#{name}"%"
    </if>
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mbyte.easy.entity.SysRole">
    insert into sys_role (id, available, description, 
      name)
    values (#{id,jdbcType=BIGINT}, #{available,jdbcType=BIT}, #{description,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mbyte.easy.entity.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mbyte.easy.entity.SysRole">
    update sys_role
    <set>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mbyte.easy.entity.SysRole">
    update sys_role
    set available = #{available,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectRolesByUserID" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
	sys_role.id,
	sys_role.available,
	sys_role.description,
	sys_role.`name`
	FROM
	sys_user_roles
	INNER JOIN sys_role ON sys_user_roles.roles_id = sys_role.id
	where sys_user_roles.sys_user_id = #{id,jdbcType=BIGINT}

  </select>
  
  <select id="selectByRolename" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where  name = #{name} limit 1
  </select>
  <select id="selectByRoleForPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role
    where 1 = 1
    <if test="name != null and name != ''">
      and name like "%"#{name}"%"
    </if>


  </select>

</mapper>